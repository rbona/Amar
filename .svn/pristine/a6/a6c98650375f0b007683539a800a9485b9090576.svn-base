/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.amar.modelo;

import br.com.amar.modelo.template.ModeloEntidade;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Mantém o tipo de data
 *
 * @author Rodrigo
 */
@Entity
public class TipoData extends ModeloEntidade {

    /**
     * Identificador do tipo de data
     */
    @Id
    @GeneratedValue
    private Long Id;

    /**
     * Retorna o identificador do tipo de data
     *
     * @return Número que identifica o tipo de data
     */
    public Long getId() {
        return Id;
    }

    /**
     * Descrição do tipo de data
     */
    @Column(nullable = false, length = 100)
    private String descricao;

    /**
     * Retorna a descrição atual do tipo de data
     *
     * @return Descrição atual do tipo de data
     */
    public String getDescricao() {
        return this.descricao;
    }

    /**
     * Defini uma nova descrição para o tipo de data
     *
     * @param novaDescricao Nova descrição para o tipo de data
     */
    public void setDescricao(String novaDescricao) {
        this.descricao = novaDescricao;
    }

    /**
     * Quando inativo preenche esse campo com a data
     */
    @Column(nullable = true)
    @Temporal(TemporalType.DATE)
    private Date dataInativo;

    /**
     * Retorna a data de inativação do cadastro
     *
     * @return Data de inatividade do cadastro, retorna null caso esteja ativo
     */
    public Date getDataInativo() {
        return this.dataInativo;
    }

    /**
     * Defini uma data de inatividade para o cadastro
     *
     * @param novaDataInativo Data de inatividade do cadastro, informar null
     * para ativar o cadastro
     */
    public void setDataInativo(Date novaDataInativo) {
        this.dataInativo = novaDataInativo;
    }

    /**
     * Defini o cadastro como ativo
     */
    public void setAtivo() {
        setDataInativo(null);
    }

    /**
     * Defini o cadastro como inativo
     */
    public void setInativo() {
        if (getDataInativo() == null) {
            setDataInativo(new Date(((java.util.Date) Calendar.getInstance().getTime()).getTime()));
        }
    }

    /**
     * Retorna informando se o tipo de data está ativo
     *
     * @return True indica que está ativo, false indica que está inativo
     */
    public boolean getAtivo() {
        return getDataInativo() == null;
    }

    /**
     * Defini o estadivo de ativo ou inativo para o tipo de dadta
     *
     * @param ativaInativaTipoData True indica que ficará ativo, false indica
     * que ficará inativo
     */
    public void setAtivo(boolean ativaInativaTipoData) {
        if (ativaInativaTipoData) {
            setAtivo();
        } else {
            setInativo();
        }
    }

    public boolean validarDados() {
        return false;
    }

    @Override
    public Long[] getChavePrimaria() {
        return new Long[]{Id};
    }
}
